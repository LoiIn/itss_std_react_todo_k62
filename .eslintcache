[{"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js":"5","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js":"6","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js":"7","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js":"8","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js":"9","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/fbStorage.js":"10","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js":"11"},{"size":500,"mtime":1621528837149,"results":"12","hashOfConfig":"13"},{"size":274,"mtime":1621528837145,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1621528837149,"results":"15","hashOfConfig":"13"},{"size":1726,"mtime":1621529177589,"results":"16","hashOfConfig":"13"},{"size":660,"mtime":1621528837145,"results":"17","hashOfConfig":"13"},{"size":796,"mtime":1621528837145,"results":"18","hashOfConfig":"13"},{"size":972,"mtime":1621528837145,"results":"19","hashOfConfig":"13"},{"size":960,"mtime":1621528100588,"results":"20","hashOfConfig":"13"},{"size":68,"mtime":1621528837149,"results":"21","hashOfConfig":"13"},{"size":1091,"mtime":1621529113469,"results":"22","hashOfConfig":"13"},{"size":1408,"mtime":1621529049389,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"17547r1",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"26"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"26"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"26"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"26"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js",[],["51","52"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js",["53","54","55"],"import React, { useState } from 'react';\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\n// import useStorage from '../hooks/storage';\nimport useFbStorage from '../hooks/fbStorage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\n\n  const [filter, setFilter] = React.useState('ALL');\n  \n  const displayItems = items.filter(item => {\n    if(filter === 'ALL') return true;\n    if(filter === 'TODO') return !item.done;\n    if(filter === 'DONE') return item.done;\n  });\n  \n  const handleCheck = checked => {\n    updateItem(checked);\n  };\n  \n    const handleAdd = text => {\n    addItem({ text, done: false });\n  };\n  const handleFilterChange = value => setFilter(value) ;\n\n  return (\n    <div className=\"panel is-danger\">\n      <div className=\"panel-heading\">\n        <span class=\"icon-text\">\n          <span class=\"icon\">\n            <i class=\"fas fa-calendar-check\"></i>\n          </span>\n          <span> ITSS Todoアプリ</span>\n        </span>\n      </div>\n      <Input onAdd={handleAdd}/>\n      <Filter \n        onChange={handleFilterChange}\n        value={filter}\n      />\n      {displayItems.map(item => (\n        <TodoItem \n          key={item.id}\n          item={item}\n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {items.length} items\n      </div>\n      <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js",["56"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input( {onAdd} ) {\n  \n  const [text, setText] = React.useState('');\n  \n  const handleChange = e => setText(e.target.value);\n  \n  const handleKeyDown = e =>{\n    if(e.keyCode === 13){\n      onAdd(text);\n      setText('');\n    }\n  }\n  \n  return (\n    <div className=\"panel-block\">\n      <input \n       class = \"input\"\n       type = \"text\"\n       placeholder = \"Enter to add\"\n       value = {text}\n       onChange = {handleChange}\n       onKeyDown = {handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js",["57","58","59"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter( {value, onChange} ) {\n  \n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  } \n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href = \"#\"\n        onClick = {handleClick.bind(null, 'ALL')}\n        className = {value === 'ALL' ? 'is-active' : ''}\n      >\n        全て\n      </a>\n      <a\n        href = \"#\"\n        onClick = {handleClick.bind(null, 'TODO')}\n        className = {value === 'TODO' ? 'is-active' : ''}\n      >\n        未完了\n      </a>\n      <a\n        href = \"#\"\n        onClick = {handleClick.bind(null, 'DONE')}\n        className = {value === 'DONE' ? 'is-active' : ''}\n      >\n        完了済み\n      </a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/fbStorage.js",["60"],"import { useState, useEffect } from 'react';\nimport { addItemIntoFirebase, updateItemInFirebase, getItemsFromFirebase, clearItemFromFirebase } from \"../lib/firebase\";\n\nfunction useFbStorage() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n\n  const getItems = async () => {\n    const _items = await getItemsFromFirebase();\n    setItems(_items);\n  };\n\n  const addItem = async item => {\n    const newItem = { text: item.text, done: item.done };\n    await addItemIntoFirebase(newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async checked => {\n    const changes = { done: !checked.done };\n    await updateItemInFirebase(changes, checked.id);\n    const newItems = items.map((item) => {\n      if (item.id === checked.id) {\n        item = { ...item, changes}\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const clearItems = () => {\n    items.map(item => {\n      clearItemFromFirebase(item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n}\n\nexport default useFbStorage;  \n","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js",[],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"65","severity":1,"message":"69","line":13,"column":9,"nodeType":"67","messageId":"68","endLine":13,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":20,"column":42,"nodeType":"72","messageId":"73","endLine":20,"endColumn":44},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":25},{"ruleId":"74","severity":1,"message":"75","line":15,"column":7,"nodeType":"76","endLine":19,"endColumn":8},{"ruleId":"74","severity":1,"message":"75","line":22,"column":7,"nodeType":"76","endLine":26,"endColumn":8},{"ruleId":"74","severity":1,"message":"75","line":29,"column":7,"nodeType":"76","endLine":33,"endColumn":8},{"ruleId":"70","severity":1,"message":"77","line":35,"column":20,"nodeType":"72","messageId":"78","endLine":35,"endColumn":22},"no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","no-global-assign","no-unsafe-negation"]