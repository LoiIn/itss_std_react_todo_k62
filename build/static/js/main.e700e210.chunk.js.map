{"version":3,"sources":["components/TodoItem.js","components/Input.js","components/Filter.js","lib/firebase.js","hooks/fbStorage.js","components/Todo.js","components/Login.js","App.js","reportWebVitals.js","index.js"],"names":["TodoItem","item","onCheck","className","type","checked","done","onChange","text","Input","onAdd","React","useState","setText","class","placeholder","value","e","target","onKeyDown","keyCode","Filter","handleClick","key","preventDefault","href","onClick","bind","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","db","firestore","auth","uiConfig","signInFlow","signInSuccessUrl","signInOptions","GoogleAuthProvider","PROVIDER_ID","storeUserInfo","user","a","uid","collection","doc","get","userDoc","exists","set","name","displayName","id","data","getItemsFromFirebase","model","results","docs","map","console","log","addItemIntoFirebase","add","updateItemInFirebase","update","clearItemFromFirebase","delete","then","catch","err","useFbStorage","items","setItems","useEffect","getItems","_items","addItem","newItem","updateItem","changes","newItems","Todo","clearItems","filter","setFilter","displayItems","handleCheck","length","Login","firebaseAuth","App","loading","setLoading","setUser","onAuthStateChanged","newUser","logout","signOut","HeaderContent","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e700e210.chunk.js","sourcesContent":["/* \n  【TodoItemコンポーネント】\n　・Todoアイテムを表示する\n　・チェックボックスにチェックが入っているか管理する\n　・チェックボックスにチェックが入っているかアイテムをグレーアウトする\n*/\nfunction TodoItem( {item, onCheck} ) {\n  const handleChange = () => {\n    onCheck(item);\n  }\n  \n  return (\n    <label className=\"panel-block\">\n      <input\n        type=\"checkbox\"\n        checked={item.done}\n        onChange={handleChange}\n      />\n      <span className={item.done ? 'has-text-grey-light' : ''}>\n        {item.text}\n      </span>\n    </label>\n  );\n}\n\nexport default TodoItem;","import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input( {onAdd} ) {\n  \n  const [text, setText] = React.useState('');\n  \n  const handleChange = e => setText(e.target.value);\n  \n  const handleKeyDown = e =>{\n    if(e.keyCode === 13){\n      onAdd(text);\n      setText('');\n    }\n  }\n  \n  return (\n    <div className=\"panel-block\">\n      <input \n       class = \"input\"\n       type = \"text\"\n       placeholder = \"Enter to add\"\n       value = {text}\n       onChange = {handleChange}\n       onKeyDown = {handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter( {value, onChange} ) {\n  \n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  } \n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href = \"#\"\n        onClick = {handleClick.bind(null, 'ALL')}\n        className = {value === 'ALL' ? 'is-active' : ''}\n      >\n        全て\n      </a>\n      <a\n        href = \"#\"\n        onClick = {handleClick.bind(null, 'TODO')}\n        className = {value === 'TODO' ? 'is-active' : ''}\n      >\n        未完了\n      </a>\n      <a\n        href = \"#\"\n        onClick = {handleClick.bind(null, 'DONE')}\n        className = {value === 'DONE' ? 'is-active' : ''}\n      >\n        完了済み\n      </a>\n    </div>\n  );\n}\n\nexport default Filter","import firebase from 'firebase'\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAhRLYe9lC6g3YMXviyMjHnKfpYLv9MFs0\",\n    authDomain: \"fir-sample-30792.firebaseapp.com\",\n    projectId: \"fir-sample-30792\",\n    storageBucket: \"fir-sample-30792.appspot.com\",\n    messagingSenderId: \"616237505675\",\n    appId: \"1:616237505675:web:46229516aa53373163088e\"\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nexport const auth = firebase.auth();\nexport default firebase;\n\n// login with auth\nexport const uiConfig = {\n  signInFlow: 'popup',\n  signInSuccessUrl: \"/\",\n  signInOptions: [\n    firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n  ],\n}\n\nexport const storeUserInfo = async (user) => {\n  const { uid } = user;\n  const userDoc = await db.collection(\"users\").doc(uid).get();\n  if (!userDoc.exists) {\n    await db.collection(\"users\").doc(uid).set({ name: user.displayName });\n    return {\n      name: user.displayName,\n      id: uid,\n    };\n  } else {\n    return {\n      id: uid,\n      ...userDoc.data(),\n    };\n  }\n}\n\nexport const updateUser = async (user, image) => {\n  try {\n    const userDoc = await firebase.firestore().collection(\"users\").doc(user.id).get();\n    if (userDoc.exists) {\n      await firebase.firestore().collection(\"users\").doc(user.id).update({ ...userDoc.data(), image: image });\n    }\n  } catch (err) {\n    console.log(err);\n  }\n} \n\nexport const getItemsFromFirebase = async () => {\n    try{\n        const model = await db\n            .collection(\"todos\")\n            .get();\n        const results = model.docs.map(\n            (doc) => ({...doc.data(), id: doc.id})\n        );\n        return results;\n    }catch (err) {\n        console.log(err);\n        return [];\n    }\n}\n\nexport const addItemIntoFirebase = async (item) => {\n  try {\n    const model = db.collection(\"todos\");\n    await model.add(item);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const updateItemInFirebase = async (item, id) => {\n  try {\n    const model = db.collection(\"todos\").doc(id);\n    await model.update(item);\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport const clearItemFromFirebase = async (item) => {\n  const model = db.collection(\"todos\").doc(item.id);\n  await model.delete().then(function () {\n  }).catch(function (err) {\n    console.log(err);\n  });\n};\n\n","import { useState, useEffect } from 'react';\nimport { addItemIntoFirebase, updateItemInFirebase, getItemsFromFirebase, clearItemFromFirebase } from \"../lib/firebase\";\n\nfunction useFbStorage() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n\n  const getItems = async () => {\n    const _items = await getItemsFromFirebase();\n    setItems(_items);\n  };\n\n  const addItem = async item => {\n    const newItem = { text: item.text, done: item.done };\n    await addItemIntoFirebase(newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async checked => {\n    const changes = { done: !checked.done };\n    await updateItemInFirebase(changes, checked.id);\n    const newItems = items.map((item) => {\n      if (item.id === checked.id) {\n        item = { ...item, changes}\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const clearItems = () => {\n    items.map(item => {\n      clearItemFromFirebase(item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n}\n\nexport default useFbStorage;  \n","import React, { useState } from 'react';\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\n// import useStorage from '../hooks/storage';\nimport useFbStorage from '../hooks/fbStorage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\n\n  const [filter, setFilter] = React.useState('ALL');\n  \n  const displayItems = items.filter(item => {\n    if(filter === 'ALL') return true;\n    if(filter === 'TODO') return !item.done;\n    if(filter === 'DONE') return item.done;\n  });\n  \n  const handleCheck = checked => {\n    updateItem(checked);\n  };\n  \n    const handleAdd = text => {\n    addItem({ text, done: false });\n  };\n  const handleFilterChange = value => setFilter(value) ;\n\n  return (\n    <div className=\"panel is-danger\">\n      <div className=\"panel-heading\">\n        <span class=\"icon-text\">\n          <span class=\"icon\">\n            <i class=\"fas fa-calendar-check\"></i>\n          </span>\n          <span> ITSS Todoアプリ</span>\n        </span>\n      </div>\n      <Input onAdd={handleAdd}/>\n      <Filter \n        onChange={handleFilterChange}\n        value={filter}\n      />\n      {displayItems.map(item => (\n        <TodoItem \n          key={item.id}\n          item={item}\n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {items.length} items\n      </div>\n      <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n/* ライブラリ */\nimport { firebase, auth, uiConfig } from \"../lib/firebase\";\n\nfunction Login() {\n  return (\n    <div className=\"column panel-block\">\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n    </div>\n  );\n};\n\nexport default Login","import React, {useState, useEffect} from 'react'\n\n/* スタイルシート */\nimport './styles/main.css';\n\n/* コンポーネント */\nimport Todo from './components/Todo';\nimport Login from \"./components/Login\";\n\nimport { auth, storeUserInfo, updateUser } from \"./lib/firebase\";\n\n\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState([]);\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (user) => {\n      setLoading(false);\n      let newUser = null;\n      if (user) {\n        newUser = await storeUserInfo(user);\n      }\n      setUser(newUser);\n    });\n  }, []);\n\n  const logout = () => {\n    auth.signOut();\n  };\n\n  const handleImageChanged = async downlodUrl => {\n    await updateUser(user, downlodUrl);\n  }\n\n  const HeaderContent = () => {\n    if (user) {\n      return (\n        <div class=\"navbar-end\">\n          <div class=\"navbar-item\">\n            {user.name}\n          </div>\n          <div class=\"navbar-item\">\n            <button class=\"button is-danger is-light is-small\" onClick={logout} > Logout</button>\n          </div>\n        </div >\n      )\n    } else {\n      return (<Login />)\n    }\n  }\n  return (\n    <div className=\"container is-fluid\">\n      <header class=\"navbar\">\n        {loading ? (\n          <p>\n            LOADING...\n          </p>\n        ) : (\n          <HeaderContent />\n        )}\n      </header >\n      <div>\n        {user && <Todo />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}