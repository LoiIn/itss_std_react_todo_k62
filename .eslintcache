[{"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js":"1","/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js":"2","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js":"3","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js":"4","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js":"5","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js":"6","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js":"7","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js":"8","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js":"9","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/fbStorage.js":"10","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js":"11","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Login.js":"12"},{"size":500,"mtime":1621578623557,"results":"13","hashOfConfig":"14"},{"size":1479,"mtime":1621581500046,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1621578623561,"results":"16","hashOfConfig":"14"},{"size":1726,"mtime":1621578623557,"results":"17","hashOfConfig":"14"},{"size":660,"mtime":1621578623557,"results":"18","hashOfConfig":"14"},{"size":796,"mtime":1621578623557,"results":"19","hashOfConfig":"14"},{"size":972,"mtime":1621578623557,"results":"20","hashOfConfig":"14"},{"size":960,"mtime":1621528100588,"results":"21","hashOfConfig":"14"},{"size":68,"mtime":1621578623557,"results":"22","hashOfConfig":"14"},{"size":1091,"mtime":1621578623557,"results":"23","hashOfConfig":"14"},{"size":2292,"mtime":1621580313995,"results":"24","hashOfConfig":"14"},{"size":361,"mtime":1621580384480,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17547r1",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"28"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"28"},"/home/ec2-user/environment/itss_std_react_todo_k62/src/index.js",[],["57","58"],"/home/ec2-user/environment/itss_std_react_todo_k62/src/App.js",["59"],"import React, {useState, useEffect} from 'react'\n\n/* スタイルシート */\nimport './styles/main.css';\n\n/* コンポーネント */\nimport Todo from './components/Todo';\nimport Login from \"./components/Login\";\n\nimport { auth, storeUserInfo, updateUser } from \"./lib/firebase\";\n\n\n\nfunction App() {\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState([]);\n\n  useEffect(() => {\n    auth.onAuthStateChanged(async (user) => {\n      setLoading(false);\n      let newUser = null;\n      if (user) {\n        newUser = await storeUserInfo(user);\n      }\n      setUser(newUser);\n    });\n  }, []);\n\n  const logout = () => {\n    auth.signOut();\n  };\n\n  const handleImageChanged = async downlodUrl => {\n    await updateUser(user, downlodUrl);\n  }\n\n  const HeaderContent = () => {\n    if (user) {\n      return (\n        <div class=\"navbar-end\">\n          <div class=\"navbar-item\">\n            {user.name}\n          </div>\n          <div class=\"navbar-item\">\n            <button class=\"button is-danger is-light is-small\" onClick={logout} > Logout</button>\n          </div>\n        </div >\n      )\n    } else {\n      return (<Login />)\n    }\n  }\n  return (\n    <div className=\"container is-fluid\">\n      <header class=\"navbar\">\n        {loading ? (\n          <p>\n            LOADING...\n          </p>\n        ) : (\n          <HeaderContent />\n        )}\n      </header >\n      <div>\n        {user && <Todo />}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/reportWebVitals.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Todo.js",["60","61","62"],"import React, { useState } from 'react';\n\n/* コンポーネント */\nimport TodoItem from './TodoItem';\nimport Input from './Input';\nimport Filter from './Filter';\n\n/* カスタムフック */\n// import useStorage from '../hooks/storage';\nimport useFbStorage from '../hooks/fbStorage';\n\n/* ライブラリ */\nimport {getKey} from \"../lib/util\";\n\nfunction Todo() {\n  const [items, addItem, updateItem, clearItems] = useFbStorage();\n\n  const [filter, setFilter] = React.useState('ALL');\n  \n  const displayItems = items.filter(item => {\n    if(filter === 'ALL') return true;\n    if(filter === 'TODO') return !item.done;\n    if(filter === 'DONE') return item.done;\n  });\n  \n  const handleCheck = checked => {\n    updateItem(checked);\n  };\n  \n    const handleAdd = text => {\n    addItem({ text, done: false });\n  };\n  const handleFilterChange = value => setFilter(value) ;\n\n  return (\n    <div className=\"panel is-danger\">\n      <div className=\"panel-heading\">\n        <span class=\"icon-text\">\n          <span class=\"icon\">\n            <i class=\"fas fa-calendar-check\"></i>\n          </span>\n          <span> ITSS Todoアプリ</span>\n        </span>\n      </div>\n      <Input onAdd={handleAdd}/>\n      <Filter \n        onChange={handleFilterChange}\n        value={filter}\n      />\n      {displayItems.map(item => (\n        <TodoItem \n          key={item.id}\n          item={item}\n          onCheck={handleCheck}\n        />\n      ))}\n      <div className=\"panel-block\">\n        {items.length} items\n      </div>\n      <div className=\"panel-block\">\n        <button className=\"button is-light is-fullwidth\" onClick={clearItems}>\n          全てのToDoを削除\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Todo;","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/TodoItem.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Input.js",["63"],"import React, { useState } from 'react';\n/* \n  【inputコンポーネント】\n　・新しいTodoを作成するINPUTフィールドを作成するコンポーネント\n　・Enterをクリックされたら入力された文字を使って新しいTodoを作成する\n*/\nfunction Input( {onAdd} ) {\n  \n  const [text, setText] = React.useState('');\n  \n  const handleChange = e => setText(e.target.value);\n  \n  const handleKeyDown = e =>{\n    if(e.keyCode === 13){\n      onAdd(text);\n      setText('');\n    }\n  }\n  \n  return (\n    <div className=\"panel-block\">\n      <input \n       class = \"input\"\n       type = \"text\"\n       placeholder = \"Enter to add\"\n       value = {text}\n       onChange = {handleChange}\n       onKeyDown = {handleKeyDown}\n      />\n    </div>\n  );\n}\n\nexport default Input;\n","/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Filter.js",["64","65","66"],"/* \n  【Filterコンポーネント】\n　・該当するTodoをステータス毎にで分けてリスト表示する\n　・タブで表示する\n　・サポートするステータスは「すべて」「未完了」「完了済み」\n*/\nfunction Filter( {value, onChange} ) {\n  \n  const handleClick = (key, e) => {\n    e.preventDefault();\n    onChange(key);\n  } \n  return (\n    <div className=\"panel-tabs\">\n      <a\n        href = \"#\"\n        onClick = {handleClick.bind(null, 'ALL')}\n        className = {value === 'ALL' ? 'is-active' : ''}\n      >\n        全て\n      </a>\n      <a\n        href = \"#\"\n        onClick = {handleClick.bind(null, 'TODO')}\n        className = {value === 'TODO' ? 'is-active' : ''}\n      >\n        未完了\n      </a>\n      <a\n        href = \"#\"\n        onClick = {handleClick.bind(null, 'DONE')}\n        className = {value === 'DONE' ? 'is-active' : ''}\n      >\n        完了済み\n      </a>\n    </div>\n  );\n}\n\nexport default Filter","/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/storage.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/util.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/hooks/fbStorage.js",["67"],"import { useState, useEffect } from 'react';\nimport { addItemIntoFirebase, updateItemInFirebase, getItemsFromFirebase, clearItemFromFirebase } from \"../lib/firebase\";\n\nfunction useFbStorage() {\n  const [items, setItems] = useState([]);\n\n  useEffect(() => {\n    getItems();\n  }, [items]);\n\n  const getItems = async () => {\n    const _items = await getItemsFromFirebase();\n    setItems(_items);\n  };\n\n  const addItem = async item => {\n    const newItem = { text: item.text, done: item.done };\n    await addItemIntoFirebase(newItem);\n    setItems([...items, newItem]);\n  };\n\n  const updateItem = async checked => {\n    const changes = { done: !checked.done };\n    await updateItemInFirebase(changes, checked.id);\n    const newItems = items.map((item) => {\n      if (item.id === checked.id) {\n        item = { ...item, changes}\n      }\n      return item;\n    })\n    setItems(newItems);\n  }\n\n  const clearItems = () => {\n    items.map(item => {\n      clearItemFromFirebase(item);\n    })\n    setItems([]);\n  };\n\n  return [items, addItem, updateItem, clearItems];\n}\n\nexport default useFbStorage;  \n","/home/ec2-user/environment/itss_std_react_todo_k62/src/lib/firebase.js",[],"/home/ec2-user/environment/itss_std_react_todo_k62/src/components/Login.js",["68"],"import React from 'react';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\n\n/* ライブラリ */\nimport { firebase, auth, uiConfig } from \"../lib/firebase\";\n\nfunction Login() {\n  return (\n    <div className=\"column panel-block\">\n      <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={auth} />\n    </div>\n  );\n};\n\nexport default Login",{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","replacedBy":"72"},{"ruleId":"73","severity":1,"message":"74","line":33,"column":9,"nodeType":"75","messageId":"76","endLine":33,"endColumn":27},{"ruleId":"73","severity":1,"message":"77","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"73","severity":1,"message":"78","line":13,"column":9,"nodeType":"75","messageId":"76","endLine":13,"endColumn":15},{"ruleId":"79","severity":1,"message":"80","line":20,"column":42,"nodeType":"81","messageId":"82","endLine":20,"endColumn":44},{"ruleId":"73","severity":1,"message":"77","line":1,"column":17,"nodeType":"75","messageId":"76","endLine":1,"endColumn":25},{"ruleId":"83","severity":1,"message":"84","line":15,"column":7,"nodeType":"85","endLine":19,"endColumn":8},{"ruleId":"83","severity":1,"message":"84","line":22,"column":7,"nodeType":"85","endLine":26,"endColumn":8},{"ruleId":"83","severity":1,"message":"84","line":29,"column":7,"nodeType":"85","endLine":33,"endColumn":8},{"ruleId":"79","severity":1,"message":"86","line":35,"column":20,"nodeType":"81","messageId":"87","endLine":35,"endColumn":22},{"ruleId":"73","severity":1,"message":"88","line":5,"column":10,"nodeType":"75","messageId":"76","endLine":5,"endColumn":18},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"no-unused-vars","'handleImageChanged' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'getKey' is defined but never used.","array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Array.prototype.map() expects a return value from arrow function.","expectedInside","'firebase' is defined but never used.","no-global-assign","no-unsafe-negation"]